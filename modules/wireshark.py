

class WiresharkModule:
    import argparse
    import cmd2
#### template methods ####
    wireshark_parser = argparse.ArgumentParser()
    wireshark_parser.add_argument('iface', help='= name of the iface')

    @cmd2.with_argparser(wireshark_parser)
    def do_wireshark(self,args):
        """Wireshark module for analyze all the traffic"""
        import os
        import subprocess
        import pentesting_lab.core.global_vars as global_vars
        dump_path = global_vars.dump_path + args.iface + '_dump.pcap'
        if os.path.isfile(dump_path):
            cmd = 'tail -n+0 -f {} | wireshark -k -Y "(!stp)" -i -'.format(dump_path)
            p = subprocess.Popen(cmd,shell=True,
                    stdout=subprocess.DEVNULL, stderr=subprocess.DEVNULL)
        else:
            print('The selected iface is not monitoring the traffic or it doesn\' exists.')

    def complete_wireshark(self, text, line, begidx, endidx):
        pass
        #template_cmd_strs = ['test1','test2']
        #index_dict = \
        #    { 
        #        1: template_cmd_strs 
        #    }
        #return self.index_based_complete(text, line, begidx, endidx, index_dict=index_dict)

