#! /usr/bin/env python3


try:
    import gnureadline as readline
except ImportError:
    import readline



class Completer:
    def __init__(self, options):
        self.options = options
        self.current_candidates = []

    def complete(self, text, state):
        response = None
        if state == 0:
            original_line = readline.get_line_buffer()
            begin = readline.get_begidx()
            end = readline.get_endidx()
            being_completed = original_line[begin:end]
            words = original_line.split()
            

            if not words:
                self.current_candidates = sorted(self.options.keys())
            else:
                try:
                    if begin == 0:
                        #first word
                        candidates = self.options.keys()
                    else:
                        # later word
                        first = words[0]
                        candidates = self.options[first]
                        

                    
                    if being_completed:
                        self.current_candidates = [ w for w in candidates if w.startswith(being_completed)]
                    else:
                        self.current_candidates = candidates

                except (KeyError, IndexError) as err:
                    self.current_candidates = []

            

        try:
            response = self.current_candidates[state]
        except IndexError:
            response = None

        return response



            


def input_loop():
    line = ''
    while line != 'stop':
        line = input('> ')
        print('Entered: {!r}'.format(line))




OPTIONS = {'new':['vm','iface'],'ssh':['machine1','machine2','machine3'],'list':[],'exit':[]}
readline.read_init_file('readline_config.rc')
readline.set_completer(Completer(OPTIONS).complete)

input_loop()


