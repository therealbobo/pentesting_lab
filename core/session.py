#! /usr/bin/env python

import configparser
import os
import json
import core.preferences

# session components:
#   vms config
#   vde config
#   generals ??

sessions_path = core.preferences.sessions_path


class Session:
    def __init__(self, vm_configs=list(), vde_configs=list()):
        self.vm_configs = vm_configs
        self.vde_configs = vde_configs

    def save(self, path=sessions_path):
        config = configparser.ConfigParser()
        config['General'] = {}
        general = config['General']
        general['vm_configs'] = json.dumps(self.vm_configs)
        general['vde_configs'] = json.dumps(self.vm_configs)
        with open(path, 'w') as configfile:
            config.write(configfile)


    def load(self, path=sessions_path):
        config = configparser.ConfigParser()
        if os.path.isfile(path):
            config.read(path)
            try:
                self.vm_configs = config['vm_configs'] 
                self.vde_configs = config['vde_configs'] 
            except:
                return False
            return True
        else:
            return False

    def add_vm(self, config):
        self.vm_configs.append(config)

    def add_iface(self, config):
        self.vde_configs.append(config)

    def show(self):
        for vm in self.vm_configs:
            print(vm)
        for iface in self.vde_configs:
            print(iface)

    def __repr__(self):
        return "\n".join(self.vm_configs) + "\n".join(self.vde_configs)


#Config example:
#
#[General]
#ServerAliveInterval = 45
#Compression = yes
#CompressionLevel = 9
#ForwardX11 = yes
#
#[VMConfigs]
#{json}
#
#[VDEConfig]
#{json}


