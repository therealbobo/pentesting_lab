#! /usr/bin/env python3

#Vagrant.configure("2") do |config|
#  config.vm.box = "ubuntu/xenial64" #ok
#  config.vm.provider "virtualbox" do |vb|
#	  vb.customize ["modifyvm", :id, "--nic3","generic"]
#	  vb.customize ["modifyvm", :id, "--nicgenericdrv3","VDE"]
#	  vb.customize ["modifyvm", :id, "--nicproperty3","network=/tmp/switch1"]
#	  vb.customize ["modifyvm", :id, "--nic4","generic"]
#	  vb.customize ["modifyvm", :id, "--nicgenericdrv4","VDE"]
#	  vb.customize ["modifyvm", :id, "--nicproperty4","network=/tmp/switch1"]
#	  vb.customize ["modifyvm", :id, "--nic5","generic"]
#	  vb.customize ["modifyvm", :id, "--nicgenericdrv5","VDE"]
#	  vb.customize ["modifyvm", :id, "--nicproperty5","network=/tmp/switch1"]
#  end
#  config.vm.provision "ansible" do |ansible|
#	   ansible.playbook = "playbook.yml"
#	   ansible.extra_vars = { ansible_python_interpreter:"/usr/bin/python3" }
#  end
#end


class VirtualMachine:
    def __init__(self, name, box, gui, linked_clone, network_interfaces, packages):
        self.name = name
        self.box = box
        self.gui = gui
        self.linked_clone = linked_clone
        self.network_interfaces = network_interfaces
        self.packages = packages
        

    def add_network_interface(self, iface):
        self.network_interfaces.append(iface)

    def remove_network_interface(self, iface):
        self.network_interfaces.remove(iface)

    def add_pkg(package):
        self.packages.append(package)

    #TODO
    def remove_pkg(package):
        self.packages.remove(package)

    def iface_config(self, iface):
        base = """
	  # VDE SWICH ({iface})
	  vb.customize ["modifyvm", :id, "--nic{iface_number}","generic"]
	  vb.customize ["modifyvm", :id, "--nicgenericdrv{iface_number}","VDE"]
	  vb.customize ["modifyvm", :id, "--nicproperty{iface_number}","network={iface}"]
"""
        # 2 default ifaces
        iface_number = self.network_interfaces.index(iface) + 3
        return base.format(iface_number=iface_number, iface=iface)

        

    def vb_config(self):
        config = 'config.vm.provider "virtualbox" do |vb|\n'
        #setting up name
        config += """
	  ###### VIRTUALBOX CONFIG ######
	  # VM NAME
	  vb.name = "{name}"
""".format(name=self.name)
        #setting up gui
        config += """
	  # GUI MODE
	  vb.gui = "{name}"
""".format(name=str(self.gui).lower())
        config += """
	  # IMPORTING MODE
	  vb.linked_clone = "{linked_clone}"
""".format(linked_clone=str(self.linked_clone).lower())
        config += """
	  ###### NETWORK CONFIG ###### """
        for iface in self.network_interfaces:
            config += self.iface_config(iface)
        config += "end"
        return config


ifaces = ['/tmp/switch1','/tmp/switch2']
packages = ['sqlmap','git']
vm = VirtualMachine("machine00", "ubuntu/xenial64", False, False, ifaces, packages)


print(vm.vb_config())




