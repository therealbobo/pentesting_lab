import readline
import prettytable

class Completer:
    def __init__(self, choices):
        self.choices = choices

    def complete(self, text, state):
        if len(text.split()) > 0:
            results =  [x for x in self.choices if x.startswith(text)] + [None]
        else:
            results =  [x for x in self.choices if x.startswith(text.split()[-1])] + [None]
        return results[state]

##################################################


def prompt(prompt_msg='> ', error_msg='', choice_msg=None, choices=list(), choices_only=False, check_function=None, ret_list=False, accept_none=False):

    # intro message
    if choice_msg is not None:
        print(choice_msg)

    loop = True
    result = ''
    
    completer = None

    while loop:
        # choices
        if len(choices) > 0:
            #readline.parse_and_bind('tab: complete')
            # complete with choices and indexes
            compl_ls = [str(x) for x in range(0, len(choices))]
            compl_ls = choices + compl_ls
            #completer = Completer(compl_ls).complete
            #readline.set_completer(completer)
            t = prettytable.PrettyTable(['Index','Content'])
            i = 0
            for row in list(filter(None,choices)):
                t.add_row([i,row])
                i += 1
            print(t)

        user_input = input(prompt_msg)
        if accept_none and user_input.strip() is '':
            result = user_input
            loop = False
            break
        if user_input.isdigit():
            if int(user_input) in range(0,i):
                result = choices[int(user_input)]
                loop = False
        elif user_input in choices:
            result = user_input
            loop = False
        elif choices_only is False:
            result = user_input
            break

    if ret_list:
        return list(filter(None,result.split()))
    else:
        return result
