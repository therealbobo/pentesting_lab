import readline
import prettytable

class Completer:
    def __init__(self, choices):
        self.choices = choices

    def complete(self, text, state):
        results =  [x for x in self.choices if x.startswith(text)] + [None]
        return results[state]

##################################################


def prompt(prompt_msg='> ', error_msg='', choice_msg=None, choices=list(), choices_only=False, check_function=None):

    # intro message
    if choice_msg is not None:
        print(choice_msg)

    loop = True
    result = ''

    while loop:
        # choices
        if len(choices) > 0:
            readline.parse_and_bind('tab: complete')
            # complete with choices and indexes
            compl_ls = [str(x) for x in range(0, len(choices))]
            compl_ls = choices + compl_ls
            readline.set_completer(Completer(compl_ls).complete)
            t = prettytable.PrettyTable(['Index','Content'])
            i = 0
            for row in choices:
                t.add_row([i,row])
                i += 1
            print(t)

        user_input = input(prompt_msg)
        if choices_only is False:
            result = user_input
            break
        if user_input in choices:
            result = user_input
            loop = False
        elif user_input.isdigit():
            result = choices[int(user_input)]
            loop = False

    return result



l = ['el1','el2','el3']
print(prompt(choices=l, choices_only=True))
